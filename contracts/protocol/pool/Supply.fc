#include "../../imports/stdlib.fc";
#include "PoolStorage.fc";

;; Operation codes
const int op::supply_pool = 1;   ;; op code for supply_pool operation


() supply_pool(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) {
    save_storage(my_balance, msg_value, in_msg_full, in_msg_body);
}

;; Get method for retrieving user supply
(int) get_supply(slice address) method_id {
    return get_user_supply(address);
}


;; Get method for retrieving LTV
(int) ltv() method_id {
    return get_ltv();
}

(int) get_address() method_id {
    return get_stored_address();
}

(int) get_value() method_id {
    return get_stored_value();
}



() user_supply(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
    if (in_msg_body.slice_empty?()) { ;; ignore all empty messages
        return ();
    }
    
    slice cs = in_msg_full.begin_parse();
    int flags = cs~load_uint(4);
    if (flags & 1) { ;; ignore all bounced messages
        return ();
    }

    ;; Read operation type
    int op = in_msg_body~load_uint(32);
    
    ;; Handle different operations
    if (op == op::supply_pool) {
        supply_pool(my_balance, msg_value, in_msg_full, in_msg_body);
        return ();
    }
    
    throw(0xffff); ;; Throw error if operation not recognized
}
